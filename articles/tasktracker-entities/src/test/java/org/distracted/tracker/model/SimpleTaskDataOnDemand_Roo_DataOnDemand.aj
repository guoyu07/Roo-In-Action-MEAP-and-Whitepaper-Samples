// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.distracted.tracker.model;

import java.util.List;
import java.util.Random;
import org.distracted.tracker.model.SimpleTask;
import org.springframework.stereotype.Component;

privileged aspect SimpleTaskDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SimpleTaskDataOnDemand: @Component;
    
    private Random SimpleTaskDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<SimpleTask> SimpleTaskDataOnDemand.data;
    
    public SimpleTask SimpleTaskDataOnDemand.getNewTransientSimpleTask(int index) {
        org.distracted.tracker.model.SimpleTask obj = new org.distracted.tracker.model.SimpleTask();
        obj.setCompleted(new Boolean(true));
        obj.setDateComplete(new java.util.Date());
        obj.setDateDue(new java.util.Date());
        java.lang.String description = "description_" + index;
        if (description.length() > 800) {
            description  = description.substring(0, 800);
        }
        obj.setDescription(description);
        java.lang.String name = "name_" + index;
        if (name.length() > 80) {
            name  = name.substring(0, 80);
        }
        obj.setName(name);
        return obj;
    }
    
    public SimpleTask SimpleTaskDataOnDemand.getSpecificSimpleTask(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        SimpleTask obj = data.get(index);
        return SimpleTask.findSimpleTask(obj.getId());
    }
    
    public SimpleTask SimpleTaskDataOnDemand.getRandomSimpleTask() {
        init();
        SimpleTask obj = data.get(rnd.nextInt(data.size()));
        return SimpleTask.findSimpleTask(obj.getId());
    }
    
    public boolean SimpleTaskDataOnDemand.modifySimpleTask(SimpleTask obj) {
        return false;
    }
    
    public void SimpleTaskDataOnDemand.init() {
        data = new java.util.ArrayList<org.distracted.tracker.model.SimpleTask>();
        for (int i = 0; i < 10; i++) {
            org.distracted.tracker.model.SimpleTask obj = getNewTransientSimpleTask(i);
            obj.persist();
            data.add(obj);
        }
    }
    
}
